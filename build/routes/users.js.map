{"version":3,"file":"users.js","names":["router","Router","get","req","res","User","findOneByUserId","params","userid","result","status","send","succes","err","post","create","body","sendStatus","name","code","console","log","message","Object","keys","keyValue","join","deleteByUserId"],"sources":["../../src/routes/users.js"],"sourcesContent":["import {Router} from \"express\";\nimport {User} from \"../models/user\";\n\nconst router = Router();\n\nrouter.get(\"/userid/:userid\", async (req, res) => {\n\ttry {\n\t\tconst result = await User.findOneByUserId(req.params.userid);\n\t\tif (!result) {\n\t\t\treturn res.status(404).send({succes: false, err: \"User not found\"});\n\t\t}\n\t\tres.send(`findOne successfully: ${result}`);\n\t} catch (err) {\n\t\tres.status(500).send(err);\n\t}\n});\n\nrouter.post(\"/\", async (req, res) => {\n\ttry {\n\t\tconst result = await User.create(req.body);\n\t\treturn res.sendStatus(200);\n\t} catch (err) {\n\t\tif (err.name === \"MongoServerError\" && err.code === 11000) {\n\t\t\tconsole.log(err);\n\t\t\treturn res.status(422).send({\n\t\t\t\tsucces: false,\n\t\t\t\tmessage: `user already exists. : duplicate ${Object.keys(\n\t\t\t\t\terr.keyValue\n\t\t\t\t).join(\",\")}`,\n\t\t\t});\n\t\t}\n\n\t\tif (err.name === \"ValidationError\") {\n\t\t\treturn res.status(400).send({succes: false, message: err.message});\n\t\t}\n\n\t\tres.status(500).send(err);\n\t}\n});\n\nrouter.delete(\"/userid/:userid\", async (req, res) => {\n\ttry {\n\t\tconst result = await User.deleteByUserId(req.params.userid);\n\t\tif (!result) {\n\t\t\treturn res.status(404).send({succes: false, message: \"user not found!\"});\n\t\t}\n\n\t\treturn res.sendStatus(200);\n\t} catch (err) {\n\t\treturn res.status(500).send(err);\n\t}\n});\n\nexport default router;\n"],"mappings":";;;;;;;;;AAAA;;AACA;;+CAAA,oJ;;;;;;AAEA,IAAMA,MAAM,GAAG,IAAAC,eAAA,GAAf;AAEAD,MAAM,CAACE,GAAP,CAAW,iBAAX;EAAA,sEAA8B,iBAAOC,GAAP,EAAYC,GAAZ;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEPC,UAAA,CAAKC,eAAL,CAAqBH,GAAG,CAACI,MAAJ,CAAWC,MAAhC,CAFO;;UAAA;YAEtBC,MAFsB;;YAAA,IAGvBA,MAHuB;cAAA;cAAA;YAAA;;YAAA,iCAIpBL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;cAACC,MAAM,EAAE,KAAT;cAAgBC,GAAG,EAAE;YAArB,CAArB,CAJoB;;UAAA;YAM5BT,GAAG,CAACO,IAAJ,iCAAkCF,MAAlC;YAN4B;YAAA;;UAAA;YAAA;YAAA;YAQ5BL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;;UAR4B;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA9B;;EAAA;IAAA;EAAA;AAAA;AAYAX,MAAM,CAACc,IAAP,CAAY,GAAZ;EAAA,uEAAiB,kBAAOX,GAAP,EAAYC,GAAZ;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEMC,UAAA,CAAKU,MAAL,CAAYZ,GAAG,CAACa,IAAhB,CAFN;;UAAA;YAETP,MAFS;YAAA,kCAGRL,GAAG,CAACa,UAAJ,CAAe,GAAf,CAHQ;;UAAA;YAAA;YAAA;;YAAA,MAKX,aAAIC,IAAJ,KAAa,kBAAb,IAAmC,aAAIC,IAAJ,KAAa,KALrC;cAAA;cAAA;YAAA;;YAMdC,OAAO,CAACC,GAAR;YANc,kCAOPjB,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;cAC3BC,MAAM,EAAE,KADmB;cAE3BU,OAAO,6CAAsCC,MAAM,CAACC,IAAP,CAC5C,aAAIC,QADwC,EAE3CC,IAF2C,CAEtC,GAFsC,CAAtC;YAFoB,CAArB,CAPO;;UAAA;YAAA,MAeX,aAAIR,IAAJ,KAAa,iBAfF;cAAA;cAAA;YAAA;;YAAA,kCAgBPd,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;cAACC,MAAM,EAAE,KAAT;cAAgBU,OAAO,EAAE,aAAIA;YAA7B,CAArB,CAhBO;;UAAA;YAmBflB,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;;UAnBe;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjB;;EAAA;IAAA;EAAA;AAAA;AAuBAX,MAAM,UAAN,CAAc,iBAAd;EAAA,uEAAiC,kBAAOG,GAAP,EAAYC,GAAZ;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEVC,UAAA,CAAKsB,cAAL,CAAoBxB,GAAG,CAACI,MAAJ,CAAWC,MAA/B,CAFU;;UAAA;YAEzBC,MAFyB;;YAAA,IAG1BA,MAH0B;cAAA;cAAA;YAAA;;YAAA,kCAIvBL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;cAACC,MAAM,EAAE,KAAT;cAAgBU,OAAO,EAAE;YAAzB,CAArB,CAJuB;;UAAA;YAAA,kCAOxBlB,GAAG,CAACa,UAAJ,CAAe,GAAf,CAPwB;;UAAA;YAAA;YAAA;YAAA,kCASxBb,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,cATwB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjC;;EAAA;IAAA;EAAA;AAAA;eAaeX,M"}