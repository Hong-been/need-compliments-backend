{"version":3,"file":"users.js","names":["router","Router","get","req","res","User","findOneByUserId","params","userid","result","status","json","succes","err","user","send","post","create","body","name","code","console","log","message","Object","keys","keyValue","join","deleteByUserId","sendStatus","Goal","findByUserId","goals"],"sources":["../../src/routes/users.js"],"sourcesContent":["import {Router} from \"express\";\nimport {User} from \"../models/user\";\nimport {Goal} from \"../models/goal\";\nimport {Task} from \"../models/task\";\n\nconst router = Router();\n\nrouter.get(\"/:userid\", async (req, res) => {\n\ttry {\n\t\tconst result = await User.findOneByUserId(req.params.userid);\n\t\tif (!result) {\n\t\t\treturn res.status(404).json({succes: false, err: \"User not found\"});\n\t\t}\n\t\tres.json({user: result});\n\t} catch (err) {\n\t\tres.status(500).send(err);\n\t}\n});\n\nrouter.post(\"/\", async (req, res) => {\n\ttry {\n\t\tconst result = await User.create(req.body);\n\t\treturn res.json({user: result});\n\t} catch (err) {\n\t\tif (err.name === \"MongoServerError\" && err.code === 11000) {\n\t\t\tconsole.log(err);\n\t\t\treturn res.status(422).json({\n\t\t\t\tsucces: false,\n\t\t\t\tmessage: `user already exists. : duplicate ${Object.keys(\n\t\t\t\t\terr.keyValue\n\t\t\t\t).join(\",\")}`,\n\t\t\t});\n\t\t}\n\n\t\tif (err.name === \"ValidationError\") {\n\t\t\treturn res.status(400).json({succes: false, message: err.message});\n\t\t}\n\n\t\tres.status(500).send(err);\n\t}\n});\n\nrouter.delete(\"/:userid\", async (req, res) => {\n\ttry {\n\t\tconst result = await User.deleteByUserId(req.params.userid);\n\t\tif (!result) {\n\t\t\treturn res.status(404).json({succes: false, message: \"user not found!\"});\n\t\t}\n\n\t\treturn res.sendStatus(200);\n\t} catch (err) {\n\t\treturn res.status(500).json(err);\n\t}\n});\n\nrouter.get(\"/:userid/goals\", async (req, res) => {\n\ttry {\n\t\tconst result = await Goal.findByUserId(req.params.userid);\n\t\tif (!result) {\n\t\t\treturn res.status(404).json({succes: false, err: \"User not found\"});\n\t\t}\n\t\tres.json({goals: result});\n\t} catch (err) {\n\t\tres.status(500).send(err);\n\t}\n});\n\nexport default router;\n"],"mappings":"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"}